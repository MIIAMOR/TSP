
/*---------------------------贪心算法思想下解的说明------------------------------*/

算法思想：以当前所在的点为参考选择离自己最近的点作为下一站，走过的点不在经过


贪心思想只能求得每一步只能求得局部最短路径，因此最终结果是近似最优解

贪心算法求解的最短路程的长度为：69299.4
实际的最短路径为：59030
此算法和最优解的近似度为:1.17397
time = 0.022s
/*---------------------------贪心算法思想下解的说明------------------------------*/



/*---------------------------遗传算法2思想下解的说明------------------------------*/

算法思想：随机生成一个路线序列，路线路径长度短的会更可能遗传下去，所以经过多次代际迭代，最终的结果会趋近于最优解


代际更迭次数越多，越接近最优解。这种算法最终结果是近似最优解

遗传算法求解的最短路程的长度为：77270.9
实际的最短路径为：59030
此算法和最优解的近似度为:1.30901
time = 321.785s
这个算法迭代终止条件是前后 992 代最优个体一样
这个算法中共计迭代 5700次
其中每一代个体数为 248   交叉遗传的概率为 0.8   变异的概率为 0.1

迭代过程中 交叉遗传次数为568425  其中变异次数为134162

以下是迭代过程中每一代中最好的个体所对应的路先长度变化（每20代输出一次）

438972 342248 287429 248077 215554 194349 183503 173896 162121 156576 149980 144747 140746 135883 133860 131815 129722 127759 125563 123453 
122747 121712 120679 119924 118957 115146 113466 113090 112047 109202 107890 106662 104480 101508 100760 100224 100003 99998.3 99579.4 99574.5 
99574.5 99568.8 99352.2 97148.5 95546.7 95441.5 95089.7 93900.7 93900.7 93900.7 91728.3 91728.3 91728.3 83616 83263.1 83263.1 82983.4 82983.4 82888.3 82858.5 
82678.8 82284 82216.6 82216.6 82216.6 82216.6 80896 80896 80799.5 80799.5 80599.2 80599.2 80059.8 79882.7 79230.6 79230.6 79230.6 79230.6 79174.3 79174.3 
79174.3 79174.3 79174.3 79174.3 79174.3 79174.3 79174.3 79174.3 79174.3 79174.3 78943.9 78943.9 78943.9 78904.3 78904.3 78904.3 78904.3 78904.3 78904.3 78904.3 
78686.3 78686.3 78686.3 78686.3 78686.3 78686.3 78659.5 78659.5 78659.5 78659.5 78659.5 78636.1 78636.1 78636.1 78636.1 78632.5 78632.5 78632.5 78632.5 78632.5 
78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 
78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 78632.5 77912.1 77912.1 77912.1 77912.1 77912.1 77912.1 
77912.1 77840.2 77465.7 77465.7 77465.7 77465.7 77465.7 77465.7 77465.7 77465.7 77465.7 77465.7 77465.7 77465.7 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 
77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 
77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77354.3 77352.4 77352.4 77352.4 77352.4 
77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77352.4 77270.9 77270.9 77270.9 77270.9 77270.9 
77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 
77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 77270.9 
77270.9 77270.9 77270.9 77270.9 77270.9 
/*---------------------------遗传算法2思想下解的说明------------------------------*/


